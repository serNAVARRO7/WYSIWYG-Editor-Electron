{"version":3,"file":"ngx-wig.umd.js","sources":["../../projects/ngx-wig/src/lib/config.ts","../../projects/ngx-wig/src/lib/ngx-wig-toolbar.service.ts","../../projects/ngx-wig/src/lib/ngx-wig.component.ts","../../projects/ngx-wig/src/lib/ngx-wig.module.ts","../../../projects/ngx-wig/src/public_api.ts","../../../projects/ngx-wig/src/ngx-wig.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { NgxWigComponent } from './ngx-wig.component';\n\nexport type commandFunction = (ctx: NgxWigComponent) => void;\n\nexport interface TButton {\n  label?: string;\n  icon?: string;\n  title?: string;\n  command?: string | commandFunction;\n  styleClass?: string;\n}\n\nexport interface TButtonLibrary {\n  [name: string]: TButton;\n}\n\nexport const DEFAULT_LIBRARY_BUTTONS: TButtonLibrary = {\n  list1: {\n    label: 'UL',\n    title: 'Unordered List',\n    command: 'insertunorderedlist',\n    styleClass: 'list-ul',\n    icon: 'icon-list-ul'\n  },\n  list2: {\n    label: 'OL',\n    title: 'Ordered List',\n    command: 'insertorderedlist',\n    styleClass: 'list-ol',\n    icon: 'icon-list-ol'\n  },\n  bold: {\n    label: 'B',\n    title: 'Bold',\n    command: 'bold',\n    styleClass: 'bold',\n    icon: 'icon-bold'\n  },\n  italic: {\n    label: 'I',\n    title: 'Italic',\n    command: 'italic',\n    styleClass: 'italic',\n    icon: 'icon-italic'\n  },\n  link: {\n    label: 'Link',\n    title: 'Link',\n    command: 'createlink',\n    styleClass: 'link',\n    icon: 'icon-link'\n  },\n  underline: {\n    label: 'U',\n    title: 'Underline',\n    command: 'underline',\n    styleClass: 'format-underlined',\n    icon: 'icon-underline'\n  }\n};\n\nexport const CUSTOM_LIBRARY_BUTTONS: TButtonLibrary = {\n  edithtml: {\n    label: 'Edit HTML',\n    title: 'Edit HTML',\n    command: (ctx: NgxWigComponent) => {\n      ctx.editMode = !ctx.editMode;\n    },\n    styleClass: 'nw-button--source',\n    icon: '',\n  }\n};\n\n\nexport const BUTTONS = new InjectionToken<TButton[][]>('BUTTONS');\n","import { Injectable, Inject } from '@angular/core';\nimport { TButtonLibrary, TButton, BUTTONS } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxWigToolbarService {\n  private _defaultButtonsList: string[] = [];\n  private _buttonLibrary: TButtonLibrary;\n\n  constructor(@Inject(BUTTONS) buttonLibraryConfig: TButtonLibrary[]) {\n    this._buttonLibrary = buttonLibraryConfig.reduce((acc: TButtonLibrary, val: TButtonLibrary) => ({ ...acc, ...val }), {});\n    this._defaultButtonsList = Object.keys(this._buttonLibrary);\n  }\n\n  public setButtons(buttons: string[]): void {\n    if (!Array.isArray(buttons)) {\n      throw new Error('Argument \"buttons\" should be an array');\n    }\n\n    this._defaultButtonsList = buttons;\n  }\n\n  public addStandardButton(\n    name: string,\n    title: string,\n    command: string,\n    styleClass: string,\n    icon: string\n  ) {\n    if (!name || !title || !command) {\n      throw new Error('Arguments \"name\", \"title\" and \"command\" are required');\n    }\n\n    styleClass = styleClass || '';\n    this._buttonLibrary[name] = { title, command, styleClass, icon };\n    this._defaultButtonsList.push(name);\n  }\n\n  public getToolbarButtons(buttonsList?: string): {}[] {\n    let buttons = this._defaultButtonsList;\n    const toolbarButtons: TButton[] = [];\n\n    if (typeof buttonsList !== 'undefined') {\n      buttons = string2array(buttonsList);\n    }\n\n    buttons.forEach(buttonKey => {\n      if (!buttonKey) {\n        return;\n      }\n\n      if (!this._buttonLibrary[buttonKey]) {\n        throw new Error(\n          `There is no \"${buttonKey}\" in your library. Possible variants: ${Object.keys(this._buttonLibrary)}`\n        );\n      }\n\n      const button = Object.assign({}, this._buttonLibrary[buttonKey]);\n      // button.isActive = () => {return !!this.command && document.queryCommandState(this.command);}\n      toolbarButtons.push(button);\n    });\n\n    return toolbarButtons;\n  }\n}\n\nfunction string2array(keysString: string) {\n  return keysString\n    .split(',')\n    .map(Function.prototype.call, String.prototype.trim);\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n  Inject,\n  OnDestroy,\n  AfterViewInit,\n} from '@angular/core';\n\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { NgxWigToolbarService } from './ngx-wig-toolbar.service';\nimport { DOCUMENT } from '@angular/common';\nimport { TButton, commandFunction } from './config';\n\n/** @dynamic */\n@Component({\n  selector: 'ngx-wig',\n  templateUrl: './ngx-wig-component.html',\n  styleUrls: ['./ngx-wig-component.css'],\n  providers: [\n    NgxWigToolbarService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxWigComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxWigComponent implements AfterViewInit,\n                                        OnInit,\n                                        OnChanges,\n                                        OnDestroy,\n                                        ControlValueAccessor {\n\n  @Input()\n  public content: string;\n\n  @Input()\n  public placeholder: string;\n\n  @Input()\n  public buttons: string;\n\n  @Input()\n  public disabled: boolean;\n\n  @Output()\n  public contentChange = new EventEmitter();\n\n  @ViewChild('ngWigEditable', { read: ElementRef, static: true })\n  public ngxWigEditable: ElementRef;\n\n  public editMode = false;\n  public container: HTMLElement;\n  public toolbarButtons: TButton[] = [];\n  public hasFocus = false;\n\n  private _mutationObserver: MutationObserver;\n\n  public constructor(\n    private _ngWigToolbarService: NgxWigToolbarService,\n    @Inject(DOCUMENT) private document: any, // cannot set Document here - Angular issue - https://github.com/angular/angular/issues/20351\n    @Inject('WINDOW') private window,\n  ) {}\n\n  public execCommand(command: string| commandFunction, options?: string): boolean {\n\n    if (typeof command === 'function') {\n      command(this);\n      return true;\n    }\n\n    if (this.editMode) {\n      return false;\n    }\n\n    if (this.document.queryCommandSupported && !this.document.queryCommandSupported(command)) {\n      throw new Error(`The command \"${command}\" is not supported`);\n    }\n    if (command === 'createlink' || command === 'insertImage') {\n      options = window.prompt('Please enter the URL', 'http://') || '';\n      if (!options) {\n        return false;\n      }\n    }\n\n    this.container.focus();\n\n    // use insertHtml for `createlink` command to account for IE/Edge purposes, in case there is no selection\n    const selection = this.document.getSelection().toString();\n\n    if (command === 'createlink' && selection === '') {\n      this.document.execCommand('insertHtml', false, '<a href=\"' + options + '\">' + options + '</a>');\n    } else {\n      this.document.execCommand(command, false, options);\n    }\n\n    this.onContentChange(this.container.innerHTML);\n    return true;\n  }\n\n  public ngOnInit(): void {\n    this.toolbarButtons = this._ngWigToolbarService.getToolbarButtons(this.buttons);\n    this.container = this.ngxWigEditable.nativeElement;\n\n    if (this.content) {\n      this.container.innerHTML = this.content;\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    // Workaround for IE11 which doesn't fire 'input' event on\n    // contenteditable\n    // https://stackoverflow.com/a/49287032/7369511\n\n    // check if the browser is IE:\n    if (window.document['documentMode']) {\n      this._mutationObserver = new MutationObserver(() => {\n        this.onContentChange(this.container.innerHTML);\n      });\n\n      this._mutationObserver.observe(\n        this.container,\n        { childList: true, subtree: true, characterData: true }\n      );\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this._mutationObserver) {\n      this._mutationObserver.disconnect();\n    }\n  }\n\n  public onContentChange(newContent: string): void {\n    this.content = newContent;\n    this.contentChange.emit(this.content);\n    this.propagateChange(this.content);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (this.container && changes['content']) {\n\n      // we need to focus the container before pasting at the caret\n      this.container.focus();\n\n      // clear the previous content\n      this.container.innerHTML = '';\n\n      // add the new content\n      this.pasteHtmlAtCaret(changes['content'].currentValue);\n    }\n  }\n\n  public onTextareaChange(newContent: string): void {\n    // model -> view\n    this.container.innerHTML = newContent;\n    this.onContentChange(newContent);\n  }\n\n  public writeValue(value: any): void {\n    if (!value) { value = ''; }\n\n    this.container.innerHTML = value;\n    this.content = value;\n  }\n\n  public shouldShowPlaceholder(): boolean {\n    return !!this.placeholder\n      && !this.container.innerText;\n  }\n\n  private pasteHtmlAtCaret(html) {\n    let sel, range;\n\n    if (window.getSelection) {\n      sel = window.getSelection();\n      if (sel.getRangeAt && sel.rangeCount) {\n        range = sel.getRangeAt(0);\n        range.deleteContents();\n\n        // append the content in a temporary div\n        const el = this.document.createElement('div');\n        el.innerHTML = html;\n\n        const frag = this.document.createDocumentFragment();\n        let node, lastNode;\n\n        while ( (node = el.firstChild) ) {\n          lastNode = frag.appendChild(node);\n        }\n        range.insertNode(frag);\n\n        // Preserve the selection\n        if (lastNode) {\n          range = range.cloneRange();\n          range.setStartAfter(lastNode);\n          range.collapse(true);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n      }\n    }\n  }\n\n  public registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void): void {\n    this.propagateTouched = fn;\n  }\n\n  private propagateChange: any = (_: any) => { };\n  public propagateTouched = () => {};\n\n  onBlur() {\n    this.hasFocus = false;\n    this.propagateTouched();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxWigComponent } from './ngx-wig.component';\nimport { FormsModule } from '@angular/forms';\nimport { TButtonLibrary, DEFAULT_LIBRARY_BUTTONS, BUTTONS, CUSTOM_LIBRARY_BUTTONS } from './config';\n\nexport function getWindowObject(): Window {\n  return window;\n}\n\n@NgModule({\n  declarations: [\n    NgxWigComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  exports: [NgxWigComponent],\n  providers: [\n    { provide: BUTTONS, multi: true, useValue: DEFAULT_LIBRARY_BUTTONS },\n    { provide: 'WINDOW', useFactory: getWindowObject },\n  ]\n})\nexport class NgxWigModule {\n\n  static forRoot(config?: { buttonsConfig: TButtonLibrary } ): ModuleWithProviders<NgxWigModule> {\n    return {\n      ngModule: NgxWigModule,\n      providers: [\n        {\n          provide: BUTTONS,\n          multi: true, useValue: ((!config || !config?.buttonsConfig) ? DEFAULT_LIBRARY_BUTTONS : config?.buttonsConfig)\n        },\n        { provide: 'WINDOW', useFactory: getWindowObject },\n      ],\n    };\n  }\n\n  static forChild(): ModuleWithProviders<NgxWigModule> {\n    return {ngModule: NgxWigModule };\n  }\n}\n","/*\n * Public API Surface of ngx-wig\n */\n\nexport * from './lib/ngx-wig-toolbar.service';\nexport * from './lib/ngx-wig.component';\nexport * from './lib/ngx-wig.module';\nexport * from './lib/config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["InjectionToken","Injectable","Inject","EventEmitter","Component","NG_VALUE_ACCESSOR","forwardRef","ViewEncapsulation","DOCUMENT","Input","Output","ViewChild","ElementRef","NgModule","CommonModule","FormsModule"],"mappings":"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"}