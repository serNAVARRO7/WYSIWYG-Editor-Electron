{"version":3,"file":"ngx-wig.js","sources":["../../projects/ngx-wig/src/lib/config.ts","../../projects/ngx-wig/src/lib/ngx-wig-toolbar.service.ts","../../projects/ngx-wig/src/lib/ngx-wig.component.ts","../../projects/ngx-wig/src/lib/ngx-wig.module.ts","../../../projects/ngx-wig/src/public_api.ts","../../../projects/ngx-wig/src/ngx-wig.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { NgxWigComponent } from './ngx-wig.component';\n\nexport type commandFunction = (ctx: NgxWigComponent) => void;\n\nexport interface TButton {\n  label?: string;\n  icon?: string;\n  title?: string;\n  command?: string | commandFunction;\n  styleClass?: string;\n}\n\nexport interface TButtonLibrary {\n  [name: string]: TButton;\n}\n\nexport const DEFAULT_LIBRARY_BUTTONS: TButtonLibrary = {\n  list1: {\n    label: 'UL',\n    title: 'Unordered List',\n    command: 'insertunorderedlist',\n    styleClass: 'list-ul',\n    icon: 'icon-list-ul'\n  },\n  list2: {\n    label: 'OL',\n    title: 'Ordered List',\n    command: 'insertorderedlist',\n    styleClass: 'list-ol',\n    icon: 'icon-list-ol'\n  },\n  bold: {\n    label: 'B',\n    title: 'Bold',\n    command: 'bold',\n    styleClass: 'bold',\n    icon: 'icon-bold'\n  },\n  italic: {\n    label: 'I',\n    title: 'Italic',\n    command: 'italic',\n    styleClass: 'italic',\n    icon: 'icon-italic'\n  },\n  link: {\n    label: 'Link',\n    title: 'Link',\n    command: 'createlink',\n    styleClass: 'link',\n    icon: 'icon-link'\n  },\n  underline: {\n    label: 'U',\n    title: 'Underline',\n    command: 'underline',\n    styleClass: 'format-underlined',\n    icon: 'icon-underline'\n  }\n};\n\nexport const CUSTOM_LIBRARY_BUTTONS: TButtonLibrary = {\n  edithtml: {\n    label: 'Edit HTML',\n    title: 'Edit HTML',\n    command: (ctx: NgxWigComponent) => {\n      ctx.editMode = !ctx.editMode;\n    },\n    styleClass: 'nw-button--source',\n    icon: '',\n  }\n};\n\n\nexport const BUTTONS = new InjectionToken<TButton[][]>('BUTTONS');\n","import { Injectable, Inject } from '@angular/core';\nimport { TButtonLibrary, TButton, BUTTONS } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxWigToolbarService {\n  private _defaultButtonsList: string[] = [];\n  private _buttonLibrary: TButtonLibrary;\n\n  constructor(@Inject(BUTTONS) buttonLibraryConfig: TButtonLibrary[]) {\n    this._buttonLibrary = buttonLibraryConfig.reduce((acc: TButtonLibrary, val: TButtonLibrary) => ({ ...acc, ...val }), {});\n    this._defaultButtonsList = Object.keys(this._buttonLibrary);\n  }\n\n  public setButtons(buttons: string[]): void {\n    if (!Array.isArray(buttons)) {\n      throw new Error('Argument \"buttons\" should be an array');\n    }\n\n    this._defaultButtonsList = buttons;\n  }\n\n  public addStandardButton(\n    name: string,\n    title: string,\n    command: string,\n    styleClass: string,\n    icon: string\n  ) {\n    if (!name || !title || !command) {\n      throw new Error('Arguments \"name\", \"title\" and \"command\" are required');\n    }\n\n    styleClass = styleClass || '';\n    this._buttonLibrary[name] = { title, command, styleClass, icon };\n    this._defaultButtonsList.push(name);\n  }\n\n  public getToolbarButtons(buttonsList?: string): {}[] {\n    let buttons = this._defaultButtonsList;\n    const toolbarButtons: TButton[] = [];\n\n    if (typeof buttonsList !== 'undefined') {\n      buttons = string2array(buttonsList);\n    }\n\n    buttons.forEach(buttonKey => {\n      if (!buttonKey) {\n        return;\n      }\n\n      if (!this._buttonLibrary[buttonKey]) {\n        throw new Error(\n          `There is no \"${buttonKey}\" in your library. Possible variants: ${Object.keys(this._buttonLibrary)}`\n        );\n      }\n\n      const button = Object.assign({}, this._buttonLibrary[buttonKey]);\n      // button.isActive = () => {return !!this.command && document.queryCommandState(this.command);}\n      toolbarButtons.push(button);\n    });\n\n    return toolbarButtons;\n  }\n}\n\nfunction string2array(keysString: string) {\n  return keysString\n    .split(',')\n    .map(Function.prototype.call, String.prototype.trim);\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n  Inject,\n  OnDestroy,\n  AfterViewInit,\n} from '@angular/core';\n\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { NgxWigToolbarService } from './ngx-wig-toolbar.service';\nimport { DOCUMENT } from '@angular/common';\nimport { TButton, commandFunction } from './config';\n\n/** @dynamic */\n@Component({\n  selector: 'ngx-wig',\n  templateUrl: './ngx-wig-component.html',\n  styleUrls: ['./ngx-wig-component.css'],\n  providers: [\n    NgxWigToolbarService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxWigComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxWigComponent implements AfterViewInit,\n                                        OnInit,\n                                        OnChanges,\n                                        OnDestroy,\n                                        ControlValueAccessor {\n\n  @Input()\n  public content: string;\n\n  @Input()\n  public placeholder: string;\n\n  @Input()\n  public buttons: string;\n\n  @Input()\n  public disabled: boolean;\n\n  @Output()\n  public contentChange = new EventEmitter();\n\n  @ViewChild('ngWigEditable', { read: ElementRef, static: true })\n  public ngxWigEditable: ElementRef;\n\n  public editMode = false;\n  public container: HTMLElement;\n  public toolbarButtons: TButton[] = [];\n  public hasFocus = false;\n\n  private _mutationObserver: MutationObserver;\n\n  public constructor(\n    private _ngWigToolbarService: NgxWigToolbarService,\n    @Inject(DOCUMENT) private document: any, // cannot set Document here - Angular issue - https://github.com/angular/angular/issues/20351\n    @Inject('WINDOW') private window,\n  ) {}\n\n  public execCommand(command: string| commandFunction, options?: string): boolean {\n\n    if (typeof command === 'function') {\n      command(this);\n      return true;\n    }\n\n    if (this.editMode) {\n      return false;\n    }\n\n    if (this.document.queryCommandSupported && !this.document.queryCommandSupported(command)) {\n      throw new Error(`The command \"${command}\" is not supported`);\n    }\n    if (command === 'createlink' || command === 'insertImage') {\n      options = window.prompt('Please enter the URL', 'http://') || '';\n      if (!options) {\n        return false;\n      }\n    }\n\n    this.container.focus();\n\n    // use insertHtml for `createlink` command to account for IE/Edge purposes, in case there is no selection\n    const selection = this.document.getSelection().toString();\n\n    if (command === 'createlink' && selection === '') {\n      this.document.execCommand('insertHtml', false, '<a href=\"' + options + '\">' + options + '</a>');\n    } else {\n      this.document.execCommand(command, false, options);\n    }\n\n    this.onContentChange(this.container.innerHTML);\n    return true;\n  }\n\n  public ngOnInit(): void {\n    this.toolbarButtons = this._ngWigToolbarService.getToolbarButtons(this.buttons);\n    this.container = this.ngxWigEditable.nativeElement;\n\n    if (this.content) {\n      this.container.innerHTML = this.content;\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    // Workaround for IE11 which doesn't fire 'input' event on\n    // contenteditable\n    // https://stackoverflow.com/a/49287032/7369511\n\n    // check if the browser is IE:\n    if (window.document['documentMode']) {\n      this._mutationObserver = new MutationObserver(() => {\n        this.onContentChange(this.container.innerHTML);\n      });\n\n      this._mutationObserver.observe(\n        this.container,\n        { childList: true, subtree: true, characterData: true }\n      );\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this._mutationObserver) {\n      this._mutationObserver.disconnect();\n    }\n  }\n\n  public onContentChange(newContent: string): void {\n    this.content = newContent;\n    this.contentChange.emit(this.content);\n    this.propagateChange(this.content);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (this.container && changes['content']) {\n\n      // we need to focus the container before pasting at the caret\n      this.container.focus();\n\n      // clear the previous content\n      this.container.innerHTML = '';\n\n      // add the new content\n      this.pasteHtmlAtCaret(changes['content'].currentValue);\n    }\n  }\n\n  public onTextareaChange(newContent: string): void {\n    // model -> view\n    this.container.innerHTML = newContent;\n    this.onContentChange(newContent);\n  }\n\n  public writeValue(value: any): void {\n    if (!value) { value = ''; }\n\n    this.container.innerHTML = value;\n    this.content = value;\n  }\n\n  public shouldShowPlaceholder(): boolean {\n    return !!this.placeholder\n      && !this.container.innerText;\n  }\n\n  private pasteHtmlAtCaret(html) {\n    let sel, range;\n\n    if (window.getSelection) {\n      sel = window.getSelection();\n      if (sel.getRangeAt && sel.rangeCount) {\n        range = sel.getRangeAt(0);\n        range.deleteContents();\n\n        // append the content in a temporary div\n        const el = this.document.createElement('div');\n        el.innerHTML = html;\n\n        const frag = this.document.createDocumentFragment();\n        let node, lastNode;\n\n        while ( (node = el.firstChild) ) {\n          lastNode = frag.appendChild(node);\n        }\n        range.insertNode(frag);\n\n        // Preserve the selection\n        if (lastNode) {\n          range = range.cloneRange();\n          range.setStartAfter(lastNode);\n          range.collapse(true);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n      }\n    }\n  }\n\n  public registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void): void {\n    this.propagateTouched = fn;\n  }\n\n  private propagateChange: any = (_: any) => { };\n  public propagateTouched = () => {};\n\n  onBlur() {\n    this.hasFocus = false;\n    this.propagateTouched();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxWigComponent } from './ngx-wig.component';\nimport { FormsModule } from '@angular/forms';\nimport { TButtonLibrary, DEFAULT_LIBRARY_BUTTONS, BUTTONS, CUSTOM_LIBRARY_BUTTONS } from './config';\n\nexport function getWindowObject(): Window {\n  return window;\n}\n\n@NgModule({\n  declarations: [\n    NgxWigComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  exports: [NgxWigComponent],\n  providers: [\n    { provide: BUTTONS, multi: true, useValue: DEFAULT_LIBRARY_BUTTONS },\n    { provide: 'WINDOW', useFactory: getWindowObject },\n  ]\n})\nexport class NgxWigModule {\n\n  static forRoot(config?: { buttonsConfig: TButtonLibrary } ): ModuleWithProviders<NgxWigModule> {\n    return {\n      ngModule: NgxWigModule,\n      providers: [\n        {\n          provide: BUTTONS,\n          multi: true, useValue: ((!config || !config?.buttonsConfig) ? DEFAULT_LIBRARY_BUTTONS : config?.buttonsConfig)\n        },\n        { provide: 'WINDOW', useFactory: getWindowObject },\n      ],\n    };\n  }\n\n  static forChild(): ModuleWithProviders<NgxWigModule> {\n    return {ngModule: NgxWigModule };\n  }\n}\n","/*\n * Public API Surface of ngx-wig\n */\n\nexport * from './lib/ngx-wig-toolbar.service';\nexport * from './lib/ngx-wig.component';\nexport * from './lib/ngx-wig.module';\nexport * from './lib/config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}