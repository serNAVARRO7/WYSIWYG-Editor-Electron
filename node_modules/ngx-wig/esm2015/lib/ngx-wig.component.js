import { Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewEncapsulation, forwardRef, Inject, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { NgxWigToolbarService } from './ngx-wig-toolbar.service';
import { DOCUMENT } from '@angular/common';
/** @dynamic */
export class NgxWigComponent {
    constructor(_ngWigToolbarService, document, // cannot set Document here - Angular issue - https://github.com/angular/angular/issues/20351
    window) {
        this._ngWigToolbarService = _ngWigToolbarService;
        this.document = document;
        this.window = window;
        this.contentChange = new EventEmitter();
        this.editMode = false;
        this.toolbarButtons = [];
        this.hasFocus = false;
        this.propagateChange = (_) => { };
        this.propagateTouched = () => { };
    }
    execCommand(command, options) {
        if (typeof command === 'function') {
            command(this);
            return true;
        }
        if (this.editMode) {
            return false;
        }
        if (this.document.queryCommandSupported && !this.document.queryCommandSupported(command)) {
            throw new Error(`The command "${command}" is not supported`);
        }
        if (command === 'createlink' || command === 'insertImage') {
            options = window.prompt('Please enter the URL', 'http://') || '';
            if (!options) {
                return false;
            }
        }
        this.container.focus();
        // use insertHtml for `createlink` command to account for IE/Edge purposes, in case there is no selection
        const selection = this.document.getSelection().toString();
        if (command === 'createlink' && selection === '') {
            this.document.execCommand('insertHtml', false, '<a href="' + options + '">' + options + '</a>');
        }
        else {
            this.document.execCommand(command, false, options);
        }
        this.onContentChange(this.container.innerHTML);
        return true;
    }
    ngOnInit() {
        this.toolbarButtons = this._ngWigToolbarService.getToolbarButtons(this.buttons);
        this.container = this.ngxWigEditable.nativeElement;
        if (this.content) {
            this.container.innerHTML = this.content;
        }
    }
    ngAfterViewInit() {
        // Workaround for IE11 which doesn't fire 'input' event on
        // contenteditable
        // https://stackoverflow.com/a/49287032/7369511
        // check if the browser is IE:
        if (window.document['documentMode']) {
            this._mutationObserver = new MutationObserver(() => {
                this.onContentChange(this.container.innerHTML);
            });
            this._mutationObserver.observe(this.container, { childList: true, subtree: true, characterData: true });
        }
    }
    ngOnDestroy() {
        if (this._mutationObserver) {
            this._mutationObserver.disconnect();
        }
    }
    onContentChange(newContent) {
        this.content = newContent;
        this.contentChange.emit(this.content);
        this.propagateChange(this.content);
    }
    ngOnChanges(changes) {
        if (this.container && changes['content']) {
            // we need to focus the container before pasting at the caret
            this.container.focus();
            // clear the previous content
            this.container.innerHTML = '';
            // add the new content
            this.pasteHtmlAtCaret(changes['content'].currentValue);
        }
    }
    onTextareaChange(newContent) {
        // model -> view
        this.container.innerHTML = newContent;
        this.onContentChange(newContent);
    }
    writeValue(value) {
        if (!value) {
            value = '';
        }
        this.container.innerHTML = value;
        this.content = value;
    }
    shouldShowPlaceholder() {
        return !!this.placeholder
            && !this.container.innerText;
    }
    pasteHtmlAtCaret(html) {
        let sel, range;
        if (window.getSelection) {
            sel = window.getSelection();
            if (sel.getRangeAt && sel.rangeCount) {
                range = sel.getRangeAt(0);
                range.deleteContents();
                // append the content in a temporary div
                const el = this.document.createElement('div');
                el.innerHTML = html;
                const frag = this.document.createDocumentFragment();
                let node, lastNode;
                while ((node = el.firstChild)) {
                    lastNode = frag.appendChild(node);
                }
                range.insertNode(frag);
                // Preserve the selection
                if (lastNode) {
                    range = range.cloneRange();
                    range.setStartAfter(lastNode);
                    range.collapse(true);
                    sel.removeAllRanges();
                    sel.addRange(range);
                }
            }
        }
    }
    registerOnChange(fn) {
        this.propagateChange = fn;
    }
    registerOnTouched(fn) {
        this.propagateTouched = fn;
    }
    onBlur() {
        this.hasFocus = false;
        this.propagateTouched();
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
}
NgxWigComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-wig',
                template: "<div class=\"ng-wig\">\n    <ul class=\"nw-toolbar\">\n      <li *ngFor=\"let button of toolbarButtons\"\n          class=\"nw-toolbar__item\">\n        <div>\n          <button type=\"button\"\n                  class=\"nw-button\"\n                  [ngClass]=\"[button.styleClass]\"\n                  [title]=\"button.title\"\n                  (click)=\"execCommand(button.command)\"\n                  [disabled]=\"disabled\"\n                  tabindex=\"-1\">\n            <ng-container *ngIf=\"!button.icon\">{{ button.label }}</ng-container>\n            <div *ngIf=\"button.icon\"\n                 class=\"icon\"\n                 [ngClass]=\"[button.icon]\">\n            </div>\n          </button>\n        </div>\n      </li>\n    </ul>\n\n    <div class=\"nw-editor-container\"\n         (click)=\"container.focus()\"\n         [ngClass]=\"{ 'nw-editor-container--with-toolbar': toolbarButtons.length }\">\n      <div *ngIf=\"editMode\"\n           class=\"nw-editor__src-container\">\n        <textarea [ngModel]=\"content\"\n                  (ngModelChange)=\"onTextareaChange($event)\"\n                  (blur)=\"propagateTouched()\"\n                  class=\"nw-editor__src\">\n        </textarea>\n      </div>\n      <div class=\"nw-editor\"\n           [ngClass]=\"{ 'nw-disabled': disabled,'nw-invisible': editMode }\">\n        <div *ngIf=\"shouldShowPlaceholder()\"\n             class=\"nw-editor__placeholder\"\n             [innerText]=\"placeholder\">\n        </div>\n        <div #ngWigEditable\n             class=\"nw-editor__res\"\n             [attr.contenteditable]=\"!disabled\"\n             [ngClass]=\"{ disabled: disabled}\"\n             (focus)=\"hasFocus = true\"\n             (blur)=\"onBlur()\"\n             (input)=\"onContentChange(ngWigEditable.innerHTML)\"><!--\n    --></div>\n      </div>\n    </div>\n  </div>\n",
                providers: [
                    NgxWigToolbarService,
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => NgxWigComponent),
                        multi: true
                    }
                ],
                encapsulation: ViewEncapsulation.None,
                styles: [".ng-wig,[class^=nw-]{-ms-box-sizing:border-box;-o-box-sizing:border-box;box-sizing:border-box}.ng-wig,.nw-toolbar{display:block;margin:0;padding:0}.nw-toolbar{background:linear-gradient(180deg,#fff,#f9f9f9);border:1px solid #ccc;border-radius:3px 3px 0 0;color:#6b7277;font-size:12px;list-style:none}.nw-toolbar__item{border-right:1px solid #dedede;display:inline-block;margin:0;vertical-align:top}.nw-toolbar label{display:inline-block;line-height:30px;padding:0 6px 0 3px}.nw-toolbar input[type=checkbox]{margin-right:-1px;vertical-align:-3px}.nw-editor{background:#fff;cursor:text;display:block;height:300px;overflow-y:auto;position:relative;width:100%}.nw-editor-container{border:1px solid #ccc;border-radius:0 0 3px 3px;position:relative}.nw-editor-container--with-toolbar{border-top:none}.nw-editor__res{display:block;min-height:100%;padding:1px 8px}.nw-editor__placeholder{color:#d3d3d3;display:block;padding:1px 8px;position:absolute;width:100%}.nw-editor__res,.nw-editor__src{border:none;box-sizing:border-box;margin:0;outline:none;width:100%}.nw-editor__res.disabled{opacity:.5}.nw-editor__src-container{bottom:0;left:0;position:absolute;right:0;top:0}.nw-editor__src{height:100%;padding:1px 8px;resize:none}.nw-editor--fixed .nw-editor{display:block;overflow-y:auto}.nw-editor--fixed .nw-editor__res{display:block;padding:1px 8px}.nw-invisible{visibility:hidden}.nw-editor--fixed .nw-invisible{display:none}.nw-editor.nw-disabled{cursor:default}.nw-button{-moz-appearance:none;-webkit-appearance:none;appearance:none;background-color:transparent;background-position:50%;background-repeat:no-repeat;border:none;border-radius:2px;cursor:pointer;display:block;height:30px;line-height:30px;margin:0;opacity:.5;padding:0;width:30px}.nw-button:focus{outline:none}.nw-button.nw-button--active,.nw-button:hover{opacity:1}.nw-button--active{background-color:#eee}.nw-button:disabled{cursor:default}.nw-button:disabled:hover{opacity:.5}.nw-content{font-family:sans-serif;font-size:14px;line-height:24px;margin:0;padding:12px}.nw-select{background-color:inherit;border:0;color:#555;height:30px;padding:6px}.nw-select:disabled{opacity:.5}.nw-select:focus{outline:none}.nw-button:focus{border-color:#d3d3d3;border-style:solid}[contenteditable]:empty:before{color:grey;content:attr(placeholder);display:inline-block}.icon{display:inline-block;height:1em;vertical-align:-.125em;width:1em}.icon-bold{background:url(\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M747 1521q74 32 140 32 376 0 376-335 0-114-41-180-27-44-61.5-74t-67.5-46.5-80.5-25-84-10.5-94.5-2q-73 0-101 10 0 53-.5 159t-.5 158q0 8-1 67.5t-.5 96.5 4.5 83.5 12 66.5zm-14-746q42 7 109 7 82 0 143-13t110-44.5 74.5-89.5 25.5-142q0-70-29-122.5t-79-82-108-43.5-124-14q-50 0-130 13 0 50 4 151t4 152q0 27-.5 80t-.5 79q0 46 1 69zm-541 889l2-94q15-4 85-16t106-27q7-12 12.5-27t8.5-33.5 5.5-32.5 3-37.5.5-34v-65.5q0-982-22-1025-4-8-22-14.5t-44.5-11-49.5-7-48.5-4.5-30.5-3l-4-83q98-2 340-11.5t373-9.5q23 0 68 .5t68 .5q70 0 136.5 13t128.5 42 108 71 74 104.5 28 137.5q0 52-16.5 95.5t-39 72-64.5 57.5-73 45-84 40q154 35 256.5 134t102.5 248q0 100-35 179.5t-93.5 130.5-138 85.5-163.5 48.5-176 14q-44 0-132-3t-132-3q-106 0-307 11t-231 12z'/%3E%3C/svg%3E\") no-repeat}.icon-check{background:url(\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1671 566q0 40-28 68l-724 724-136 136q-28 28-68 28t-68-28l-136-136-362-362q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 295 656-657q28-28 68-28t68 28l136 136q28 28 28 68z'/%3E%3C/svg%3E\") no-repeat}.icon-italic{background:url(\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M384 1662l17-85q22-7 61.5-16.5t72-19 59.5-23.5q28-35 41-101 1-7 62-289t114-543.5 52-296.5v-25q-24-13-54.5-18.5t-69.5-8-58-5.5l19-103q33 2 120 6.5t149.5 7 120.5 2.5q48 0 98.5-2.5t121-7 98.5-6.5q-5 39-19 89-30 10-101.5 28.5t-108.5 33.5q-8 19-14 42.5t-9 40-7.5 45.5-6.5 42q-27 148-87.5 419.5t-77.5 355.5q-2 9-13 58t-20 90-16 83.5-6 57.5l1 18q17 4 185 31-3 44-16 99-11 0-32.5 1.5t-32.5 1.5q-29 0-87-10t-86-10q-138-2-206-2-51 0-143 9t-121 11z'/%3E%3C/svg%3E\") no-repeat}.icon-link{background:url(\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1520 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zm-703-705q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zm895 705q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z'/%3E%3C/svg%3E\") no-repeat}.icon-list-ol{background:url(\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M381 1620q0 80-54.5 126t-135.5 46q-106 0-172-66l57-88q49 45 106 45 29 0 50.5-14.5t21.5-42.5q0-64-105-56l-26-56q8-10 32.5-43.5t42.5-54 37-38.5v-1q-16 0-48.5 1t-48.5 1v53h-106v-152h333v88l-95 115q51 12 81 49t30 88zm2-627v159h-362q-6-36-6-54 0-51 23.5-93t56.5-68 66-47.5 56.5-43.5 23.5-45q0-25-14.5-38.5t-39.5-13.5q-46 0-81 58l-85-59q24-51 71.5-79.5t105.5-28.5q73 0 123 41.5t50 112.5q0 50-34 91.5t-75 64.5-75.5 50.5-35.5 52.5h127v-60h105zm1409 319v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm-1408-899v99h-335v-99h107q0-41 .5-121.5t.5-121.5v-12h-2q-8 17-50 54l-71-76 136-127h106v404h108zm1408 387v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z'/%3E%3C/svg%3E\") no-repeat}.icon-list-ul{background:url(\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M384 1408q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm0-512q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm-1408-928q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z'/%3E%3C/svg%3E\") no-repeat}.icon-underline{background:url(\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M176 223q-37-2-45-4l-3-88q13-1 40-1 60 0 112 4 132 7 166 7 86 0 168-3 116-4 146-5 56 0 86-2l-1 14 2 64v9q-60 9-124 9-60 0-79 25-13 14-13 132 0 13 .5 32.5t.5 25.5l1 229 14 280q6 124 51 202 35 59 96 92 88 47 177 47 104 0 191-28 56-18 99-51 48-36 65-64 36-56 53-114 21-73 21-229 0-79-3.5-128t-11-122.5-13.5-159.5l-4-59q-5-67-24-88-34-35-77-34l-100 2-14-3 2-86h84l205 10q76 3 196-10l18 2q6 38 6 51 0 7-4 31-45 12-84 13-73 11-79 17-15 15-15 41 0 7 1.5 27t1.5 31q8 19 22 396 6 195-15 304-15 76-41 122-38 65-112 123-75 57-182 89-109 33-255 33-167 0-284-46-119-47-179-122-61-76-83-195-16-80-16-237v-333q0-188-17-213-25-36-147-39zm1488 1409v-64q0-14-9-23t-23-9h-1472q-14 0-23 9t-9 23v64q0 14 9 23t23 9h1472q14 0 23-9t9-23z'/%3E%3C/svg%3E\") no-repeat}"]
            },] }
];
NgxWigComponent.ctorParameters = () => [
    { type: NgxWigToolbarService },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: undefined, decorators: [{ type: Inject, args: ['WINDOW',] }] }
];
NgxWigComponent.propDecorators = {
    content: [{ type: Input }],
    placeholder: [{ type: Input }],
    buttons: [{ type: Input }],
    disabled: [{ type: Input }],
    contentChange: [{ type: Output }],
    ngxWigEditable: [{ type: ViewChild, args: ['ngWigEditable', { read: ElementRef, static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,